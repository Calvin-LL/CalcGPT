---
import type { HexColor } from "../types/CssColor";
import CalculatorButton from "./CalculatorButton.astro";

import BackspaceIcon from "./icons/BackspaceIcon.astro";
import DivideIcon from "./icons/DivideIcon.astro";
import DotIcon from "./icons/DotIcon.astro";
import EqualIcon from "./icons/EqualIcon.astro";
import MinusIcon from "./icons/MinusIcon.astro";
import MultiplyIcon from "./icons/MultiplyIcon.astro";
import PlusIcon from "./icons/PlusIcon.astro";
import RefreshIcon from "./icons/RefreshIcon.astro";

interface Props {
  lightBackgroundColor: HexColor;
  darkBackgroundColor: HexColor;

  lightTextColor: HexColor;
  darkTextColor: HexColor;
}

const { ...props } = Astro.props;
---

<div class="calculator-button-grid">
  <CalculatorButton type="clear" data-value="clear" {...props}>
    C
  </CalculatorButton>
  <CalculatorButton class="retry" type="retry" data-value="retry" {...props}>
    <RefreshIcon />{" "}<span style="font-weight: 500">Regenerate</span>
  </CalculatorButton>
  <CalculatorButton type="operator" data-value="÷" {...props}>
    <DivideIcon />
  </CalculatorButton>
  <CalculatorButton type="number" data-value="7" {...props}>7</CalculatorButton>
  <CalculatorButton type="number" data-value="8" {...props}>8</CalculatorButton>
  <CalculatorButton type="number" data-value="9" {...props}>9</CalculatorButton>
  <CalculatorButton type="operator" data-value="×" {...props}>
    <MultiplyIcon />
  </CalculatorButton>
  <CalculatorButton type="number" data-value="4" {...props}>4</CalculatorButton>
  <CalculatorButton type="number" data-value="5" {...props}>5</CalculatorButton>
  <CalculatorButton type="number" data-value="6" {...props}>6</CalculatorButton>
  <CalculatorButton type="operator" data-value="−" {...props}>
    <MinusIcon />
  </CalculatorButton>
  <CalculatorButton type="number" data-value="1" {...props}>1</CalculatorButton>
  <CalculatorButton type="number" data-value="2" {...props}>2</CalculatorButton>
  <CalculatorButton type="number" data-value="3" {...props}>3</CalculatorButton>
  <CalculatorButton type="operator" data-value="+" {...props}>
    <PlusIcon />
  </CalculatorButton>
  <CalculatorButton type="number" data-value="0" {...props}>0</CalculatorButton>
  <CalculatorButton type="number" data-value="." {...props}>
    <DotIcon />
  </CalculatorButton>
  <CalculatorButton type="number" data-value="backspace" {...props}>
    <BackspaceIcon />
  </CalculatorButton>
  <CalculatorButton type="equal" data-value="=" {...props}>
    <EqualIcon />
  </CalculatorButton>
</div>

<style>
  .calculator-button-grid {
    width: var(--calculatorButtonGridWidth);
    height: calc(var(--buttonSize) * 5 + var(--calculatorGap) * 4);

    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(5, 1fr);
    grid-column-gap: var(--calculatorGap);
    grid-row-gap: var(--calculatorGap);

    font-feature-settings: "tnum", "cv03", "cv04", "calt";
  }

  .calculator-button-grid > :global(.retry) {
    grid-area: 1 / 2 / 2 / 4;
  }
</style>
