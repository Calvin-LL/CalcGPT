---
import type { HexColor } from "../../types/CssColor";
import cryptoRandomString from "crypto-random-string";
import ModelSelectorOption from "./ModelSelectorOption.astro";
import GPT2DownloadButton from "./GPT2DownloadButton.astro";

interface Props {
  lightBackgroundColor: HexColor;
  darkBackgroundColor: HexColor;

  lightTextColor: HexColor;
  darkTextColor: HexColor;
}

const { ...props } = Astro.props;

const id = cryptoRandomString({ length: 4, type: "alphanumeric" });
---

<div class="model-selector standalone">
  <fieldset aria-labelledby={id}>
    <div id={id} class="label">Pick a model</div>

    <div>
      <ModelSelectorOption name="model" {...props} value="GPT-2" disabled>
        <div>
          A small model that can run on your browser with the <a
            href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API"
            target="_blank"
            rel="noopener noreferrer">WebGPU API</a
          >.
        </div>
        <GPT2DownloadButton {...props} />
      </ModelSelectorOption>
      <ModelSelectorOption name="model" {...props} value="GPT-4" disabled>
        <div>
          A large model that can only run on a server. Paste your <a
            href="https://platform.openai.com/account/api-keys"
            target="_blank"
            rel="noopener noreferrer">OpenAI API token</a
          > below to use it.
        </div>
        <input type="text" placeholder="Enter your API token" />
      </ModelSelectorOption>
    </div>
  </fieldset>
</div>

<style>
  div.model-selector {
    --margin: calc(var(--buttonBorderRadius) * 0.8);
    --borderRadius: calc(var(--buttonBorderRadius) + var(--calculatorGap));

    width: var(--calculatorWidth);
    box-sizing: border-box;
    margin: auto;
    margin-top: calc(var(--calculatorGap) * 2);
    margin-bottom: calc(var(--calculatorGap) * 2);
  }

  div.model-selector.standalone {
    border-radius: var(--borderRadius);

    box-shadow:
      var(--shadowOffset) var(--shadowOffset) var(--blurRadius)
        var(--darkShadowColor),
      calc(var(--shadowOffset) * -1) calc(var(--shadowOffset) * -1)
        var(--blurRadius) var(--lightShadowColor);
  }

  div.model-selector > fieldset {
    appearance: none;
    margin: 0;
    padding: 0;
    border: none;
  }

  div.model-selector > fieldset > div.label {
    margin: var(--margin);

    font-size: calc(var(--buttonSize) / 3.5);
    font-weight: bold;
  }
</style>
