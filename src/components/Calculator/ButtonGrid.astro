---
import type { HexColor } from "../../types/CssColor";
import Button from "./Button.astro";

import BackspaceIcon from "../icons/BackspaceIcon.astro";
import DivideIcon from "../icons/DivideIcon.astro";
import DotIcon from "../icons/DotIcon.astro";
import EqualIcon from "../icons/EqualIcon.astro";
import MinusIcon from "../icons/MinusIcon.astro";
import MultiplyIcon from "../icons/MultiplyIcon.astro";
import PlusIcon from "../icons/PlusIcon.astro";
import RefreshIcon from "../icons/RefreshIcon.astro";

interface Props {
  lightBackgroundColor: HexColor;
  darkBackgroundColor: HexColor;

  lightTextColor: HexColor;
  darkTextColor: HexColor;
}

const { ...props } = Astro.props;
---

<div class="button-grid">
  <Button
    {...props}
    class="calc-button"
    type="clear"
    data-value="clear"
    aria-label="clear"
  >
    C
  </Button>
  <Button
    {...props}
    class="calc-button"
    type="retry"
    data-value="retry"
    aria-label="regenerate"
  >
    <RefreshIcon />{" "}<span style="font-weight: 500">Regenerate</span>
  </Button>
  <Button
    {...props}
    class="calc-button"
    type="operator"
    data-value="÷"
    aria-label="divide"
  >
    <DivideIcon />
  </Button>
  <Button {...props} class="calc-button" type="number" data-value="7">7</Button>
  <Button {...props} class="calc-button" type="number" data-value="8">8</Button>
  <Button {...props} class="calc-button" type="number" data-value="9">9</Button>
  <Button
    {...props}
    class="calc-button"
    type="operator"
    data-value="×"
    aria-label="multiply"
  >
    <MultiplyIcon />
  </Button>
  <Button {...props} class="calc-button" type="number" data-value="4">4</Button>
  <Button {...props} class="calc-button" type="number" data-value="5">5</Button>
  <Button {...props} class="calc-button" type="number" data-value="6">6</Button>
  <Button
    {...props}
    class="calc-button"
    type="operator"
    data-value="−"
    aria-label="minus"
  >
    <MinusIcon />
  </Button>
  <Button {...props} class="calc-button" type="number" data-value="1">1</Button>
  <Button {...props} class="calc-button" type="number" data-value="2">2</Button>
  <Button {...props} class="calc-button" type="number" data-value="3">3</Button>
  <Button
    {...props}
    class="calc-button"
    type="operator"
    data-value="+"
    aria-label="plus"
  >
    <PlusIcon />
  </Button>
  <Button {...props} class="calc-button" type="number" data-value="0">0</Button>
  <Button
    {...props}
    class="calc-button"
    type="number"
    data-value="."
    aria-label="dot"
  >
    <DotIcon />
  </Button>
  <Button
    {...props}
    class="calc-button"
    type="number"
    data-value="backspace"
    aria-label="backspace"
  >
    <BackspaceIcon />
  </Button>
  <Button
    {...props}
    class="calc-button"
    type="equal"
    data-value="="
    aria-label="equal"
  >
    <EqualIcon />
  </Button>
</div>

<style lang="scss">
  .button-grid {
    width: var(--buttonGridWidth);
    height: calc(var(--buttonSize) * 5 + var(--calculatorGap) * 4);

    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(5, 1fr);
    grid-column-gap: var(--calculatorGap);
    grid-row-gap: var(--calculatorGap);

    font-feature-settings: "tnum", "cv03", "cv04", "calt";

    & > button[data-value="retry"] {
      grid-area: 1 / 2 / 2 / 4;
    }
  }
</style>
